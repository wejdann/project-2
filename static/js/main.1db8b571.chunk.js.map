{"version":3,"sources":["Components/Item.js","Components/Articles.js","Components/ReadingList.js","Components/AddArticles.js","Components/AboutUs.js","Components/Menue.js","App.js","serviceWorker.js","index.js"],"names":["Item","class","this","props","element","title","src","urlToImage","alt","description","author","id","onClick","ReadArticleFunc","Component","Articles","allArticles","undefined","map","index","key","ReadingList","EditArticles","e","preventDefault","ClearAllArticles","ReadArticle_2","elem","DeleteArticles","for","type","placeholder","value","newTitle","onChange","AddArticles","HandelChangeTitle","event","setState","target","HandelChangeUrlToImage","HandelChangeDeesc","HandelChangeAuthor","onAddButtonClick","newArticle","state","addNewArticle","alert","AboutUs","Menue","href","to","exact","path","component","render","App","ReadLater","Use_articles","HandelToDelete","splice","HandelToEdit","articleClone","Object","assign","artclesCopy","HandelToClearAll","NewArticle","articles","axios","method","url","then","res","data","catch","err","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.1db8b571.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n//this a child of Articles \nexport default class Item extends Component {\n  render() {\n    return (\n      //props the data and send it to map in articles page\n      <div class=\"container\">\n       <div class=\" card-columns-row\">\n              <div class=\"card bg-light shadow\">\n              <h5 class=\"card-title\" >{this.props.element.title}</h5>\n                <img\n                  class=\"card-img-top\"\n                  src={this.props.element.urlToImage}\n                  alt=\"Card image cap\"\n                />\n                <div class=\"card-body\">\n                  <p class=\"card-text text-center \">{this.props.element.description}</p>\n                  <label>written by <h6>{this.props.element.author}</h6></label> <br/>\n                  <br/>\n                  <button  class=\"form-control input-lg \" id=\"formGroupExampleInput\" onClick={() => this.props.ReadArticleFunc(this.props.element)}>\n              Read Later\n              </button>\n        </div>\n        </div>\n        </div>\n        </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Item from \"./Item\";\n\nexport default class Articles extends Component {\n  render() {\n    //here is a map which acsees to all elemen in allArticles\n    let allArticles = null;\n    if (this.props.allArticles !== undefined) {\n      allArticles = this.props.allArticles.map((element, index) => (\n        <Item\n          key={index}\n          element={element}\n          ReadArticleFunc={this.props.ReadArticleFunc}\n        />\n      ));\n    }\n    return (\n      //display\n      <div>\n      \n        <h1>{allArticles}</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class ReadingList extends Component {\n  //by this function user can edit the title of article in this page\n  EditArticles = (e, id) => {\n    e.preventDefault();\n    this.props.EditArticles(e, id);\n  };\n  render() {\n    return (\n      //here a map to accses to element  \n      ////here in ReadingList user can see the article that marked as  (read later)\n/// user can clear all Articles and delete one article\n      <div class=\"container\">\n        <h1>\n          <button class=\"btn btn-secondary\" onClick={() => this.props.ClearAllArticles()}>\n            Clear All\n          </button>\n        </h1>\n        {this.props.ReadArticle_2.map((elem, index) => {\n          return (\n            <div class=\"container\">\n              <div class=\"card bg-light shadow\">\n              <h5 class=\"card-title\" >{elem.title}</h5>\n                <img\n                  class=\"card-img-top\"\n                  src={elem.urlToImage}\n                  alt=\"Card image cap\"\n                />\n                <div class=\"card-body\">\n                  <p class=\"card-text text-center \">{elem.description}</p>\n                  <label>written by <h6>{elem.author}</h6></label> <br/>\n                  <button  class=\"btn btn-secondary\" onClick={() => this.props.DeleteArticles()}>\n                    Delete\n                  </button>\n                  <br/>\n                  <label for=\"formGroupExampleInput\">Rename Title :</label>\n        <br />\n              <input\n                type=\"text\" class=\"form-control input-lg \" id=\"formGroupExampleInput\"\n                placeholder=\"Write the new title\"\n                value={this.props.newTitle}\n                onChange={e => this.EditArticles(e, index)}\n              />\n              \n          \n              </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class AddArticles extends Component {\n  constructor(props) {\n    super(props);\n    // let all the elements in a obj as empty \n    this.state = {\n      title: \"\",\n      urlToImage: \"\",\n      description: \"\",\n      author: \"\"\n    };\n  }\n// function to take the value of (title)from input \n  HandelChangeTitle = event => {\n    this.setState({ title: event.target.value });\n  };\n  // function to take the value of (urlToImage)from input \n  HandelChangeUrlToImage = event => {\n    this.setState({ urlToImage: event.target.value });\n  };\n  // function to take the value of (description)from input \n  HandelChangeDeesc = event => {\n    this.setState({ description: event.target.value });\n  };\n    // function to take the value of (author)from input \n  HandelChangeAuthor = event => {\n    this.setState({ author: event.target.value });\n  };\n// function onclick the button Add New Article to add Article\n  onAddButtonClick = e => {\n    e.preventDefault(); //stop form \n//obj of state element\n    const newArticle = {\n      title: this.state.title,\n      urlToImage: this.state.urlToImage,\n      description: this.state.description,\n      author: this.state.author\n    };\n//props the function from App\n    this.props.addNewArticle(newArticle);\n    alert(\"successfully added to articles page\");\n  };\n\n  render() {\n    return (\n      // here a form where a user writting  \n      //here a label which have a fixed name\n      //here input and textarea ,allow to user to write inside it\n      // here a button to add a new article\n      <form class=\"container\">\n      <div class=\"form-group\">\n        <br/>\n        <label for=\"formGroupExampleInput\">Article Title :</label>\n        <br />\n        <input\n          type=\"text\" class=\"form-control input-lg \" id=\"formGroupExampleInput\"\n          onChange={this.HandelChangeTitle}\n          placeholder=\"Please write the title here\"\n        />\n        <br />\n        <label for=\"formGroupExampleInput\">Article Picture :</label>\n        <br />\n        <input\n          type=\"text\" class=\"form-control input-lg \" id=\"formGroupExampleInput\"\n          onChange={this.HandelChangeUrlToImage}\n          placeholder=\"Please put the url of pic here\"\n        />\n        <br />\n        <label for=\"formGroupExampleInput\">Article Description :</label>\n        <br />\n        <textarea \n          type=\"text\" class=\"form-control input-lg \" id=\"formGroupExampleInput\"\n          onChange={this.HandelChangeDeesc}\n          placeholder=\"Please write the description here\"\n        />\n        <br />\n        <label for=\"formGroupExampleInput\">Author Name</label>\n        <br />\n        <input\n          type=\"text\" class=\"form-control input-lg \" id=\"formGroupExampleInput\"\n          onChange={this.HandelChangeAuthor}\n          placeholder=\"Please write your name  here\"\n        />\n        <br />\n        <div>\n        <br />\n          <button class=\"btn btn-secondary\" onClick={this.onAddButtonClick}>Add New Article </button>\n        </div>\n       \n      </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class AboutUs extends Component {\n    render() {\n        return (\n            <div class=\"container\">\n                <p>We interest to post Articles about Bitcoin,.If you have an articles related in Bitcoin, please share it by go to Add Article page. </p>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Articles from \"./Articles\";\nimport ReadingList from \"./ReadingList\";\nimport AddArticles from \"./AddArticles\";\nimport AboutUs from \"./AboutUs\";\nimport {BrowserRouter as Router,Route,Link,} from \"react-router-dom\";\n//menue is link all Component with Component exapt the Item Component\nexport default class Menue extends Component {\n  render() {\n    return (\n      //here props all the function by the menue page to send it\n      <div>\n        <Router>\n        <div class=\"container\">\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark style=background-color: #e3f2fd;\">\n    <div class=\"navbar navbar-inverese\">\n      <a class=\"navbar-brand\" href=\"#\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/50/Bitcoin.png/220px-Bitcoin.png\"/></a>   </div>\n            <Link  class=\"navbar-brand\" to=\"/\"> Articles </Link>\n            <Link  class=\"navbar-brand\" to=\"/ReadingList\"> Reading List </Link>\n            <Link  class=\"navbar-brand\" to=\"/AddArticles\"> Add Articles </Link>\n            <Link  class=\"navbar-brand\" to=\"/AboutUs\"> About Us </Link>\n         \n            </nav>\n     \n</div>\n\n          <div>\n            <Route\n              exact\n              path=\"/\"\n              component={() => (\n                <Articles\n                  allArticles={this.props.allArticles}\n                  ReadArticleFunc={this.props.ReadArticleFunc}\n                />\n              )}\n            />\n\n            <Route\n              path=\"/ReadingList\"\n              render={() => (\n                <ReadingList\n                  ReadArticle_2={this.props.ReadArticle_2}\n                  DeleteArticles={this.props.DeleteArticles}\n                  EditArticles={this.props.EditArticles}\n                  ClearAllArticles={this.props.ClearAllArticles}\n                />\n              )}\n            />\n            <Route\n              path=\"/AddArticles\"\n              component={() => (\n                <AddArticles addNewArticle={this.props.addNewArticle} />\n              )}\n            />\n            <Route path=\"/AboutUs\" component={AboutUs} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n","// import the react\nimport React, { Component } from \"react\";\n//import the Menue \nimport Menue from \"./Components/Menue\";\n//import the axios to fetch the data from API  \nimport axios from \"axios\";\n// create a Component App\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    // add three states to use it \n    this.state = {\n      articles: [],\n      Use_articles: [],\n      newTitle: \"\",\n    };\n  }\n  //fetch the from API using axios\n  componentWillMount() {\n    axios({\n      method: \"get\",\n      url:\n        \"https://cors-anywhere.herokuapp.com/http://newsapi.org/v2/everything?q=bitcoin&from=2020-02-10&sortBy=publishedAt&apiKey=136430c128bc40ffb3148df6ed72b2a9\"\n    })\n      .then(res => {\n        this.setState({\n          articles: res.data.articles\n        });\n      })\n      .catch(err => {\n        // console.log(\"err\", err);\n      });\n  }\n  // this function for button read later \n  ReadLater = element => {\n    this.setState({\n      Use_articles: [element, ...this.state.Use_articles]\n    });\n  };\n // this function for button Delete article one element in (readinglist) page\n  HandelToDelete = elem => {\n    const Use_articles = [...this.state.Use_articles];\n    Use_articles.splice(elem, 1);\n    this.setState({\n      Use_articles\n    });\n  };\n // this function to button Edit the title of article in (readinglist) page\n  HandelToEdit = (e, id) => {\n    const articleClone = Object.assign({}, this.state.Use_articles[id]);\n\n    articleClone.title = e.target.value;\n\n    const artclesCopy = [...this.state.Use_articles];\n\n    artclesCopy.splice(id, 1, articleClone);\n\n    this.setState({\n      Use_articles: artclesCopy\n    });\n  };\n   // this function for button Clear All articles in (readinglist) page\n  HandelToClearAll = () => {\n    alert(\"Are you sure to delete all\");\n    let Use_articles = [...this.state.Use_articles];\n    Use_articles = [];\n    this.setState({\n      Use_articles\n    });\n  };\n   // this function for button add new article in (AddArticles) page\n  addNewArticle = NewArticle => {\n    this.setState({\n      articles: [...this.state.articles, NewArticle]\n    });\n  };\n\n  render() {\n    return (\n      //here send all the functions by call the Component (Menue)\n      <div>\n        <Menue\n          allArticles={this.state.articles}\n          ReadArticleFunc={this.ReadLater}\n          ReadArticle_2={this.state.Use_articles}\n          DeleteArticles={this.HandelToDelete}\n          EditArticles={this.HandelToEdit}\n          ClearAllArticles={this.HandelToClearAll}\n          addNewArticle={this.addNewArticle}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}